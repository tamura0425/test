Option Explicit
Public Sub リスト作成()
    Dim Lost_Row As Long
    Dim TempData
    Dim ws As Worksheet
    Dim da As Worksheet
    Dim sheet As Worksheet
    Set sheet = ActiveSheet ' 現在アクティブなシートを取得する1
    
    Debug.Print "start"
    
    'シートがあるかどうか調べて、ある場合はそのシートを削除
    Delete_sheet
    'dateシート作成
    Worksheets.Add After:=Worksheets(Worksheets.COUNT)
    ActiveSheet.Name = "date"
    sheet.Activate

    Set ws = ThisWorkbook.Worksheets("Master")
    'Set kp = ThisWorkbook.Worksheets("KDDI_KPIList")
    Set da = ThisWorkbook.Worksheets("date")
    
    'Counter Listのﾃﾞｰﾀを取得
    '最終行を所得
    Lost_Row = Worksheets("Master").Cells(3, 1).End(xlDown).Row

    'コピー用データ取得
    TempData = ws.Range(ws.Cells(3, 1), ws.Cells(Lost_Row, 15)).Value
    da.Range(da.Cells(1, 1), da.Cells((Lost_Row - 2), 15)).Value = TempData
    
    
'    Debug.Print 2
'    kp.Range(kp.Cells(2, 1), kp.Cells((Lost_Row - 1), 15)).Value = TempData
  'データ削除試作品

    Call データ置換(Lost_Row)
    
    'Call データ削除試作品3(Lost_Row)

    Call Sample1(Lost_Row - 2)
    
    
    Call 幅を調整

'Application.DisplayAlerts = False ' メッセージを非表示
'Sheets("date").Delete ' シート「データ」を削除

Debug.Print "end"

End Sub


'データ削除試作品３
Public Sub データ削除試作品3(Lost_Row As Long)
    Dim i As Long
    Dim x As Long
    Dim COUNT As Long
    Dim Arrays As String

    Dim Lost_Row_Counter_List As Long
    Dim cl As Worksheet
    
    Dim da As Worksheet
    Set da = ThisWorkbook.Worksheets("date")
    
    Dim MyArray As Variant
    Dim Array_Set() As String
    
    Dim NetAct_Name_Array As Variant
    
    'Dim Array_TEST As Variant
    Dim Array_TEST() As String
    
    
    COUNT = Lost_Row - 2
    
    Lost_Row_Counter_List = Worksheets("Counter List").Cells(2, 1).End(xlDown).Row

    Set da = ThisWorkbook.Worksheets("date")
    MyArray = da.Range(da.Cells(1, 16), da.Cells(COUNT, 16))
    
    'Counter Listのデータを配列に挿入
    Set cl = ThisWorkbook.Worksheets("Counter List")
    'Counter Listの最終行を所得
    NetAct_Name_Array = cl.Range(cl.Cells(2, 1), cl.Cells(Lost_Row_Counter_List, 1)).Value
    
    ReDim Array_Set(COUNT)
    
    
    Dim Sum As Object
    Set Sum = CreateObject("VBScript.RegExp")
    
'    With Sum
'        .Pattern = "sum"  'パターンを指定
'        .Global = True      '文字列全体を検索するか(True)、しないか(False)
'        .IgnoreCase = True '大文字と小文字を区別するか(False)、しないか(True)
'    End With
    
    Debug.Print "1"
     
    For i = LBound(MyArray) To UBound(MyArray)

        For x = LBound(NetAct_Name_Array) To UBound(NetAct_Name_Array)
        
            If InStr(MyArray(i, 1), NetAct_Name_Array(x, 1)) > 0 Then
                    Arrays = NetAct_Name_Array(x, 1) + vbLf + Arrays
                   
             End If
            
        Next x
        Array_Set(i) = Arrays
    Next i
    
    da.Range(da.Cells(1, 17), da.Cells(COUNT, 17)) = WorksheetFunction.Transpose(Array_Set)
    

End Sub

'データ置換
Public Sub データ置換(Lost_Row As Long)
    Dim da As Worksheet
    Dim i As Long
    Dim x As Long
    Dim COUNT As Long
    Dim MyArray As Variant
    

    COUNT = Lost_Row - 2
    
    Set da = ThisWorkbook.Worksheets("date")
    MyArray = da.Range(da.Cells(1, 15), da.Cells(COUNT, 15))
       
    '正規表現の指定1
    Dim Calendar As Object
    Set Calendar = CreateObject("VBScript.RegExp")
    
    With Calendar
        .Pattern = "\d{4}/\d{2}/\d{2}"  'パターンを指定
        .Global = True      '文字列全体を検索するか(True)、しないか(False)
        .IgnoreCase = True '大文字と小文字を区別するか(False)、しないか(True)
    End With
    
    
    '正規表現の指定2
    Dim Sum As Object
    Set Sum = CreateObject("VBScript.RegExp")
    
    With Sum
        .Pattern = "sum"  'パターンを指定
        .Global = True      '文字列全体を検索するか(True)、しないか(False)
        .IgnoreCase = True '大文字と小文字を区別するか(False)、しないか(True)
    End With

    '正規表現の指定3
    Dim Meta As Object
    Set Meta = CreateObject("VBScript.RegExp")
    Dim Str As String
    
    Str = "[-/\^\$\?\*\+\.\|\{\}\\\[\]\(\)]"
    With Meta
        .Pattern = Str 'パターンを指定
        .Global = True      '文字列全体を検索するか(True)、しないか(False)
        .IgnoreCase = True '大文字と小文字を区別するか(False)、しないか(True)
    End With
    
    'セル内の改行を削除
    Dim kara As Object
    Set kara = CreateObject("VBScript.RegExp")
    
    With kara
        .Global = True
        .Pattern = "^\n+|\n+$|\n+(?=\n)"
        'VBA100_16_02 = .Replace(Replace(arg, vbCrLf, vbLf), "")
    End With
    
    
    'MR_を含む列を全て削除
    Dim MR_ As Object
    Set MR_ = CreateObject("VBScript.RegExp")
    
    With MR_
        .Global = True
        .Pattern = "NR_.*"
    End With
    

    For i = LBound(MyArray) To UBound(MyArray)
        MyArray(i, 1) = Replace(MyArray(i, 1), "100", vbLf)
        MyArray(i, 1) = Calendar.Replace(MyArray(i, 1), vbLf)
        MyArray(i, 1) = Sum.Replace(MyArray(i, 1), vbLf)
        MyArray(i, 1) = Meta.Replace(MyArray(i, 1), vbLf)
        MyArray(i, 1) = Replace(MyArray(i, 1), " ", "")
        MyArray(i, 1) = Replace(MyArray(i, 1), "vbCrLf", "vbLf")
        MyArray(i, 1) = MR_.Replace(MyArray(i, 1), vbLf)
        'セル内の改行を削除
        MyArray(i, 1) = kara.Replace(Replace(MyArray(i, 1), vbCrLf, vbLf), "")
        
    Next i

    da.Range(da.Cells(1, 16), da.Cells(COUNT, 16)) = MyArray
 
End Sub

'Excel VBA 区切った文字数分の行挿入して一覧を作成する

Public Sub Sample1(Lost_Row As Long)
Dim i       As Long
Dim n       As Long
Dim MaxRow  As Long
Dim MyStr   As String
Dim temp    As Variant
Dim AddRow  As Long

Dim da As Worksheet
Set da = ThisWorkbook.Worksheets("date")

MaxRow = Lost_Row

'行を挿入する場合は下から
    For i = MaxRow To 1 Step -1
    
        '分解したいセルを指定する
        MyStr = da.Cells(i, 16)
        
        ',で区切って変数に格納する
        temp = Split(MyStr, vbLf)
        
        '区切った要素数を取得する
        AddRow = UBound(temp)
        
        '行挿入の際に要素数0だとエラーになるので判定する
        If AddRow > 0 Then
            
            '要素数分行挿入する
            da.Range("A" & i + 1).Resize(AddRow).EntireRow.Insert
            
        End If
         
        '要素数分ループして基準となる項目を反映して、区切った文字列を入力する
        For n = 0 To AddRow
        
            da.Cells(i + n, 16) = Cells(i, 1)
            da.Cells(i + n, 16) = temp(n)
        
        Next n
    
    Next i

End Sub


'シートがあるかどうか調べて、ある場合はそのシートを削除
Sub Delete_sheet()
    Dim ws As Worksheet
    Dim flag As Boolean
    
    For Each ws In Worksheets
        If ws.Name = "date" Then flag = True
    Next ws
    If flag = True Then
        Application.DisplayAlerts = False
        Worksheets("date").Delete
        Application.DisplayAlerts = True
    
    End If
End Sub
'O列の幅を調整
Public Sub 幅を調整()
With Worksheets("date").Columns("O")
        .EntireColumn.ColumnWidth = 40
    End With
    
    With Worksheets("date").Columns("P")
        .AutoFit
    End With
End Sub

'空白行を削除し詰める
Public Sub CommandButton1_Click()
    Dim i As Long
    Dim toprow As Long
    Dim bottomrow As Long
    
    '開始する行
    toprow = 8
    '終了する行
    bottomrow = 30
    
    For i = bottomrow To toprow Step -1
        If ActiveSheet.Cells(i, 1) = "" Then
            'A列が空白なら行削除
            Application.Rows(i).Delete
        End If
    Next
End Sub


