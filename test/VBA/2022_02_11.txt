Option Explicit
Public Sub リスト作成()
    Dim Lost_Row As Long
    Dim flag As Long
    
    Dim TempData
    Dim ws As Worksheet
    ' 現在アクティブなシートを取得
    Dim sheet As Worksheet
    Set sheet = ActiveSheet
    
    Debug.Print "start"
    
    '画面更新を無効化
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    'シートがあるかどうか調べて、ある場合はそのシートを削除
    Delete_sheet
    'dateシート作成
    Worksheets.Add After:=Worksheets(Worksheets.COUNT)
    ActiveSheet.Name = "date"
    sheet.Activate
    
    'Masterシートアクティブ用変数
    Set ws = ThisWorkbook.Worksheets("Master")
    'Set kp = ThisWorkbook.Worksheets("KDDI_KPIList")
    
    'dataシートアクティブ用変数
    Dim da As Worksheet
    Set da = ThisWorkbook.Worksheets("date")
    
    '最終行を所得
    Lost_Row = Worksheets("Master").Cells(3, 1).End(xlDown).Row
    
    'コピー用データ取得
    TempData = ws.Range(ws.Cells(3, 1), ws.Cells(Lost_Row, 15)).Value
    da.Range(da.Cells(1, 1), da.Cells((Lost_Row - 2), 15)).Value = TempData
       
    '    kp.Range(kp.Cells(2, 1), kp.Cells((Lost_Row - 1), 15)).Value = TempData
    
     Dim startTime As Double
     Dim endTime As Double
     Dim processTime As Double
     Dim i As Long
    
    '開始時間取得
    startTime = Timer
    Call データ置換(Lost_Row)
    
    Call 小文字を大文字に置換
    
    Call 重複データ削除
    
    Call 検索と行挿入
    
    flag = Function_空白確認()
    Call 列を削除する
        
    Call 幅を調整
    
        Call KDDI_KPIListにコピー
    
    Call セル結合


    'Application.DisplayAlerts = False ' メッセージを非表示
    'Sheets("date").Delete ' シート「データ」を削除
    If flag = 1 Then
        MsgBox ("エラー！" & vbCrLf & "" & vbCrLf & "KPICounterまたはCounterIDに未入力があります")
    End If
    
    '画面更新を有効化
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    
    Debug.Print "end"
    
    '終了時間取得
    endTime = Timer
    
    '処理時間表示
    processTime = endTime - startTime
    MsgBox "処理時間：" & processTime

End Sub
Public Sub KDDI_KPIListにコピー()
    Dim ws As Worksheet
    Dim Arrays As Variant

    Dim lastRow   As Long
    Dim kp As Worksheet
    
    Set kp = ThisWorkbook.Worksheets("KDDI_KPIList")
    
    With Worksheets("date")
        lastRow = .Cells(Rows.COUNT, 17).End(xlUp).Row
        Arrays = .Range(.Cells(1, 1), .Cells(lastRow, 17)).Value
    End With
    
    kp.Range(kp.Cells(2, 1), kp.Cells(lastRow + 1, 17)).Value = Arrays
    
    
End Sub
Function Function_空白確認() As Long
    Dim ws As Worksheet
    Dim Arrays As Variant
    Dim i As Long
    Dim j As Long
    
    Dim flag As Long
    'Counter List最終行
    Dim lastRow   As Long
    
    With Worksheets("date")
        lastRow = .Cells(Rows.COUNT, 17).End(xlUp).Row
        Arrays = .Range(.Cells(1, 17), .Cells(lastRow, 17)).Value
        For i = LBound(Arrays, 1) To UBound(Arrays, 1)
            If Arrays(i, 1) = "" Then
                Debug.Print "6"
                Arrays(i, 1) = "?"
            End If
        Next i
    .Range(.Cells(1, 17), .Cells(lastRow, 17)) = Arrays
    .Range(.Cells(1, 18), .Cells(lastRow, 18)) = Arrays
    
    End With

    Function_空白確認 = flag
End Function
'Sub セル結合()
'    Dim Arrays As Variant
'    Dim i As Long, j As Long
'    'Counter List最終行
'    Dim lastRow   As Long
'    Application.ScreenUpdating = False
'    Application.Calculation = xlCalculationManual
'
'    With Worksheets("date")
'        lastRow = .Cells(Rows.COUNT, 15).End(xlUp).Row
'        Arrays = .Range(.Cells(1, 1), .Cells(lastRow, 15)).Value
'
'        For i = LBound(Arrays, 1) To UBound(Arrays, 1)
'            For j = LBound(Arrays, 2) To UBound(Arrays, 2)
'                If Arrays(i, j) = "" Then
'                    .Range(.Cells(i - 1, j), .Cells(i, j)).Merge
'                    'Arrays(i, j) = .Range(.Cells(i - 1, j), .Cells(i, j)).Merge
'                End If
'            Next j
'        Next i
'            '.Range(.Cells(1, 15), .Cells(lastRow, 15)) = Arrays
'    End With
'
'
'    Application.ScreenUpdating = True
'    Application.Calculation = xlCalculationAutomatic
'End Sub

Sub セル結合()
    Dim Arrays As Variant
    Dim i As Long, j As Long
    'Counter List最終行
    Dim lastRow   As Long
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    With Worksheets("KDDI_KPIList")
        lastRow = .Cells(Rows.COUNT, 17).End(xlUp).Row
        Arrays = .Range(.Cells(1, 1), .Cells(lastRow, 17)).Value
        
        For i = LBound(Arrays, 1) To UBound(Arrays, 1)
            For j = LBound(Arrays, 2) To UBound(Arrays, 2)
                If Arrays(i, j) = "" Then
                    .Range(.Cells(i - 1, j), .Cells(i, j)).Merge
                    
                End If
            Next j
        Next i
           
    End With
    
    
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
End Sub
Public Sub 検索と行挿入()
    'ワークシート用変数
     Dim clWs     As Worksheet
     Dim daWs     As Worksheet
     '連想配列用変数
     Dim dictUser As Dictionary
      '最終行代入変数
     Dim mxRow    As Long
     '代入用変数
     Dim myStr    As String
      '配列用変数
     Dim temp     As Variant
     'Counter List最終行
     Dim lastRow   As Long
     'ループ用変数
     Dim i        As Long
     Dim n        As Long
     '判定用
     Dim cnt      As Long
     ' For Each用変数
     Dim e        As Variant
      
     'ワークシート操作作業
     Set clWs = ThisWorkbook.Worksheets("Counter List")
     Set daWs = ThisWorkbook.Worksheets("date")
      
     'Counter Listの最終行取得
     lastRow = clWs.Cells(2, 1).End(xlDown).Row
      
     '辞書の宣言
     Set dictUser = New Dictionary
     
     '辞書型配列作成
     For i = 2 To lastRow
        'Dictionaryに格納されたペアのキーに一致する値が存在するか否かをBoolean(True/False)で返すメソッド
         If dictUser.Exists(clWs.Cells(i, 1).Value) = False Then
            
            dictUser(clWs.Cells(i, 1).Value) = clWs.Cells(i, 9).Value
         End If
     Next
     
     With daWs
        'dateの最終行取得
         mxRow = .Cells(1, 16).End(xlDown).Row
         
         '繰返し処理開始
        '行を挿入する場合は下から
         For i = mxRow To 1 Step -1
            '分解したいセルを指定する
             myStr = daWs.Cells(i, 16)
             
             '改行で区切って配列に格納する
             temp = Split(myStr, vbLf)
          
             cnt = 0
             For Each e In temp
             'データがDictionaryオブジェクトにキー存在いていればcntをプラス1
                 If dictUser.Exists(e) Then cnt = cnt + 1
             Next
             
             'Dictionaryオブジェクト分の行を挿入
             '.EntireRow.Insert＝「Range(セル名).EntireRow」で指定したセルの行数を取得してから、行を挿入
             If cnt > 1 Then
                 daWs.Range("A" & i + 1).Resize(cnt - 1).EntireRow.Insert
             End If
             
             n = 0
             
             For Each e In temp
                 If dictUser.Exists(e) Then
                     .Cells(i + n, 18) = dictUser(e)
                     .Cells(i + n, 17) = e
                     n = n + 1
                 End If
             Next
         Next i
     End With
     
     Set dictUser = Nothing
 End Sub
Public Sub 重複データ削除()
    Dim myCell As Range, targetRange As Range
    Dim buf As Variant
    Dim i As Long
    Dim myDic As Object
    Dim da As Worksheet
    Set da = ThisWorkbook.Worksheets("date")
    
    With ActiveSheet
    
    Set targetRange = da.Range(da.Range("P1"), da.Range("P" & .Rows.COUNT).End(xlUp))
    End With
    
    Set myDic = CreateObject("Scripting.Dictionary")
    For Each myCell In targetRange.Cells
        buf = Split(myCell.Value, vbLf)
        
        For i = LBound(buf) To UBound(buf)
            If Not myDic.Exists(buf(i)) Then myDic.Add buf(i), ""
        Next i
        
        myCell.Offset(0, 0).Value = Join(myDic.Keys, vbLf)
        myDic.RemoveAll
    Next myCell
    
    Set myDic = Nothing

End Sub
'データ置換
Public Sub データ置換(Lost_Row As Long)
    Dim da As Worksheet
    Dim i As Long
    Dim x As Long
    Dim COUNT As Long
    Dim myArray As Variant
    COUNT = Lost_Row - 2
    
    Set da = ThisWorkbook.Worksheets("date")
    myArray = da.Range(da.Cells(1, 15), da.Cells(COUNT, 15))
       
    '正規表現の指定1
    Dim Calendar As Object
    Set Calendar = CreateObject("VBScript.RegExp")
    
    With Calendar
        .Pattern = "\d{4}/\d{2}/\d{2}"  'パターンを指定
        .Global = True      '文字列全体を検索するか(True)、しないか(False)
        .IgnoreCase = True '大文字と小文字を区別するか(False)、しないか(True)
    End With
    
    '正規表現の指定2
    Dim Sum As Object
    Set Sum = CreateObject("VBScript.RegExp")
    
    With Sum
        .Pattern = "sum"  'パターンを指定
        .Global = True      '文字列全体を検索するか(True)、しないか(False)
        .IgnoreCase = True '大文字と小文字を区別するか(False)、しないか(True)
    End With

    '正規表現の指定3
    Dim Meta As Object
    Set Meta = CreateObject("VBScript.RegExp")
    Dim str As String
    
    str = "[-/\^\$\?\*\+\.\|\{\}\\\[\]\(\)]"
    With Meta
        .Pattern = str 'パターンを指定
        .Global = True      '文字列全体を検索するか(True)、しないか(False)
        .IgnoreCase = True '大文字と小文字を区別するか(False)、しないか(True)
    End With
    
    'セル内の改行を削除
    Dim kara As Object
    Set kara = CreateObject("VBScript.RegExp")
    
    With kara
        .Global = True
        .Pattern = "^\n+|\n+$|\n+(?=\n)"
    End With
    
    'MR_を含む列を全て削除
    Dim MR_ As Object
    Set MR_ = CreateObject("VBScript.RegExp")
    
    With MR_
        .Global = True
        .Pattern = "NR_.*"
    End With
    
    '5GSAを含む列を全て削除
    Dim SA As Object
    Set SA = CreateObject("VBScript.RegExp")
    
    With SA
        .Global = True
        .Pattern = "5GSA.*"
    End With
    
        '5GSAを含む列を全て削除
    Dim gNB As Object
    Set gNB = CreateObject("VBScript.RegExp")
    
    With gNB
        .Global = True
        .Pattern = "gNB.*"
    End With
    
    'freqを含む列を全て削除
    Dim freq As Object
    Set freq = CreateObject("VBScript.RegExp")
    
    With freq
        .Global = True
        .Pattern = "freq.*"
    End With
    
    'M5を含む列を全て削除
    Dim M5 As Object
    Set M5 = CreateObject("VBScript.RegExp")
    
    With M5
        .Global = True
        .Pattern = "M5.*"
    End With
    
    'DUhを含む列を全て削除
    Dim DUh As Object
    Set DUh = CreateObject("VBScript.RegExp")
    
    With DUh
        .Global = True
        .Pattern = "DUh.*"
    End With
    
    'Kbyteを含む列を全て削除
    Dim Kbyte As Object
    Set Kbyte = CreateObject("VBScript.RegExp")
    
    With Kbyte
        .Global = True
        .Pattern = "Kbyte.*"
    End With
    
    'Numberを含む列を全て削除
    Dim Number As Object
    Set Number = CreateObject("VBScript.RegExp")
    
    
    For i = LBound(myArray) To UBound(myArray)
        myArray(i, 1) = Replace(myArray(i, 1), "100", vbLf)
        myArray(i, 1) = Calendar.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = Sum.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = Meta.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = Replace(myArray(i, 1), " ", "")
        myArray(i, 1) = Replace(myArray(i, 1), "vbCrLf", "vbLf")
        myArray(i, 1) = MR_.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = SA.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = gNB.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = freq.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = M5.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = DUh.Replace(myArray(i, 1), vbLf)
        myArray(i, 1) = Kbyte.Replace(myArray(i, 1), vbLf)
     
        'セル内の改行を削除
        myArray(i, 1) = kara.Replace(Replace(myArray(i, 1), vbCrLf, vbLf), "")
    Next i
    
    da.Range(da.Cells(1, 16), da.Cells(COUNT, 16)) = myArray
 
End Sub
'Excel VBA 区切った文字数分の行挿入して一覧を作成する
'シートがあるかどうか調べて、ある場合はそのシートを削除
Public Sub Delete_sheet()
    Dim ws As Worksheet
    Dim flag As Boolean
    
    For Each ws In Worksheets
        If ws.Name = "date" Then flag = True
    Next ws
    If flag = True Then
        Application.DisplayAlerts = False
        Worksheets("date").Delete
        Application.DisplayAlerts = True
    
    End If
End Sub
'O列の幅を調整
Public Sub 幅を調整()
    With Worksheets("KDDI_KPIList").Columns("O")
        .EntireColumn.ColumnWidth = 40
    End With
    
    With Worksheets("KDDI_KPIList").Columns("P")
        .AutoFit
    End With

    With Worksheets("KDDI_KPIList").Columns("Q")
        .AutoFit
    End With
    
End Sub


Public Sub 小文字を大文字に置換()
    Dim da As Worksheet
    Set da = ThisWorkbook.Worksheets("date")
    
   '最終行を所得
    Dim COUNT As Long
    Dim i As Long
    
    COUNT = Worksheets("date").Cells(1, 16).End(xlDown).Row
    
    Dim moji As String
    For i = 1 To COUNT
            moji = da.Cells(i, 16)
            da.Cells(i, 16) = StrConv(moji, vbUpperCase)
    Next
End Sub

Public Sub 列を削除する()
    Dim da As Worksheet
    Set da = ThisWorkbook.Worksheets("date")
    
    da.Range("P:P").Delete
    
End Sub



